{"version":3,"sources":["components/Card.js","components/CardList.js","components/Scroll.js","components/ErrorBoundary.js","components/SearchBox.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","index","Scroll","props","style","overflow","border","height","children","ErrorBoundary","state","hasError","error","errorInfo","this","setState","Component","SearchBox","searchField","searchChange","type","placeholder","onChange","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAceA,EAZF,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,MAAOC,EAAM,EAANA,GACxB,OACI,sBAAKC,UAAW,sDAAhB,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACI,6BAAKF,IACL,4BAAIC,WCYLK,EAlBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACf,OACI,8BAEQA,EAAOC,KAAI,SAACC,EAAKC,GACb,OACI,cAAC,EAAD,CAEIR,GAAIK,EAAOG,GAAOR,GAClBF,KAAMO,EAAOG,GAAOV,KACpBC,MAAOM,EAAOG,GAAOT,OAHhBS,SCClBC,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAAEC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACKJ,EAAMK,YCmBJC,E,kDArBX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHC,E,qDAOnB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAS,M,oBAI5B,WACI,OAAGG,KAAKJ,MAAMC,SACH,+DAGJG,KAAKX,MAAMK,a,GAlBEQ,aCabC,EAbG,SAAC,GAA6B,EAA5BC,YAA6B,IAAjBC,EAAgB,EAAhBA,aAC5B,OACI,qBAAKzB,UAAW,MAAhB,SACI,uBACIA,UAAW,mCACX0B,KAAM,SACNC,YAAa,gBACbC,SAAUH,OCwCXI,G,wDAzCX,WAAYpB,GAAQ,IAAD,8BACf,cAAMA,IAeVqB,eAAiB,SAACC,GAEd,EAAKV,SAAS,CAACG,YAAYO,EAAMC,OAAOC,SAhBxC,EAAKjB,MAAQ,CACTZ,OAAQ,GACRoB,YAAa,IAJF,E,qDASnB,WAAqB,IAAD,OAChBU,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAU,EAAKjB,SAAS,CAAEjB,OAAQkC,S,oBAQhD,WAAU,IAAD,EAC2BlB,KAAKJ,MAA7BZ,EADH,EACGA,OAAQoB,EADX,EACWA,YACVe,EAAiBnC,EAAOoC,QAAO,SAAAC,GACjC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASnB,EAAYkB,kBAEzD,OAAQtC,EAAOwC,OAGP,sBAAK5C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWyB,aAAcL,KAAKU,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAU1B,OAAQmC,WAPlC,6C,GA3BMjB,cCKHuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACG,cAAC,EAAD,MAEHC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6a4688cf.chunk.js","sourcesContent":["import React from \"react\"; // it is better to have this to let JSX work\r\n\r\nconst Card = ({name, email, id})=>{\r\n    return (\r\n        <div className={'tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'}>\r\n            <img alt='Robots' src={`https://robohash.org/${id}?200x200`} />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import Card from \"./Card\";\r\n\r\nconst CardList = ({robots}) => {\r\n    return (\r\n        <div>\r\n            {\r\n                robots.map((user,index) => {\r\n                    return (\r\n                        <Card \r\n                            key={index} \r\n                            id={robots[index].id} \r\n                            name={robots[index].name} \r\n                            email={robots[index].email}\r\n                        />)\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{ overflow: 'scroll', border: '5px solid black', height: '800px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n    \r\n    componentDidCatch(error, errorInfo) {\r\n        this.setState({hasError:true})\r\n    }\r\n\r\n\r\n    render() {\r\n        if(this.state.hasError){\r\n            return <h1>Ooooops.... this is not good!</h1>\r\n        }\r\n        \r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import React from \"react\";\r\n\r\nconst SearchBox = ({searchField,searchChange})=>{\r\n    return (\r\n        <div className={'pa2'}>\r\n            <input\r\n                className={'pa3 ba b--green bg-lightest-blue'}\r\n                type={'search'}\r\n                placeholder={'search robots'}\r\n                onChange={searchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React, {Component} from \"react\";\r\nimport CardList from \"../components/CardList\";\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundary from \"../components/ErrorBoundary\";\r\nimport SearchBox from \"../components/SearchBox\"; // it is not default, so have to use the deconstructing to pick the dedicated one up\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            robots: [],\r\n            searchField: ''\r\n        }\r\n    }\r\n\r\n    // Fake the API\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response=> response.json())\r\n            .then(users => {this.setState({ robots: users})});\r\n    }\r\n\r\n    // Use the follow arrow function for all own defined one to avoid the misuse of this keyword\r\n    onSearchChange = (event) => {\r\n        // React way to change the value of state\r\n        this.setState({searchField:event.target.value})\r\n    }\r\n    render() {\r\n        const { robots, searchField } = this.state;\r\n        const filteredRobots = robots.filter(robot =>{\r\n            return robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n        })\r\n        return !robots.length ?\r\n            <h1>Loading</h1> :\r\n            (\r\n                <div className='tc'>\r\n                    <h1 className='f1'>RoboFriends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange}/>\r\n                    <Scroll>\r\n                        <ErrorBoundary>\r\n                            <CardList robots={filteredRobots} />\r\n                        </ErrorBoundary>\r\n                    </Scroll>\r\n                </div>\r\n            );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'tachyons';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n     <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}